Sequential(
  (0): Linear(in_features=32, out_features=128, bias=True)
  (1): SiLU()
  (2): Linear(in_features=128, out_features=128, bias=True)
)
ModuleList(
  (0): TimestepEmbedSequential(
    (0): Conv2d(4, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (1-3): 3 x TimestepEmbedSequential(
    (0): Downsample(
      (op): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
  )
)
TimestepEmbedSequential(
  (0): ResBlock(
    (in_layers): Sequential(
      (0): GroupNorm32(32, 32, eps=1e-05, affine=True)
      (1): SiLU()
      (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (h_upd): Identity()
    (x_upd): Identity()
    (emb_layers): Sequential(
      (0): SiLU()
      (1): Linear(in_features=128, out_features=32, bias=True)
    )
    (out_layers): Sequential(
      (0): GroupNorm32(32, 32, eps=1e-05, affine=True)
      (1): SiLU()
      (2): Dropout(p=0, inplace=False)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (skip_connection): Identity()
  )
  (1): SpatialTransformer(
    (norm): GroupNorm(32, 32, eps=1e-06, affine=True)
    (proj_in): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
    (transformer_blocks): ModuleList(
      (0): BasicTransformerBlock(
        (attn1): MemoryEfficientCrossAttention(
          (to_q): Linear(in_features=32, out_features=32, bias=False)
          (to_k): Linear(in_features=32, out_features=32, bias=False)
          (to_v): Linear(in_features=32, out_features=32, bias=False)
          (to_out): Sequential(
            (0): Linear(in_features=32, out_features=32, bias=True)
            (1): Dropout(p=0.0, inplace=False)
          )
        )
        (ff): FeedForward(
          (net): Sequential(
            (0): GEGLU(
              (proj): Linear(in_features=32, out_features=256, bias=True)
            )
            (1): Dropout(p=0.0, inplace=False)
            (2): Linear(in_features=128, out_features=32, bias=True)
          )
        )
        (attn2): MemoryEfficientCrossAttention(
          (to_q): Linear(in_features=32, out_features=32, bias=False)
          (to_k): Linear(in_features=16, out_features=32, bias=False)
          (to_v): Linear(in_features=16, out_features=32, bias=False)
          (to_out): Sequential(
            (0): Linear(in_features=32, out_features=32, bias=True)
            (1): Dropout(p=0.0, inplace=False)
          )
        )
        (norm1): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
      )
    )
    (proj_out): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
  )
  (2): ResBlock(
    (in_layers): Sequential(
      (0): GroupNorm32(32, 32, eps=1e-05, affine=True)
      (1): SiLU()
      (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (h_upd): Identity()
    (x_upd): Identity()
    (emb_layers): Sequential(
      (0): SiLU()
      (1): Linear(in_features=128, out_features=32, bias=True)
    )
    (out_layers): Sequential(
      (0): GroupNorm32(32, 32, eps=1e-05, affine=True)
      (1): SiLU()
      (2): Dropout(p=0, inplace=False)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (skip_connection): Identity()
  )
)
ModuleList(
  (0): TimestepEmbedSequential(
    (0): ResBlock(
      (in_layers): Sequential(
        (0): GroupNorm32(32, 64, eps=1e-05, affine=True)
        (1): SiLU()
        (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (h_upd): Identity()
      (x_upd): Identity()
      (emb_layers): Sequential(
        (0): SiLU()
        (1): Linear(in_features=128, out_features=32, bias=True)
      )
      (out_layers): Sequential(
        (0): GroupNorm32(32, 32, eps=1e-05, affine=True)
        (1): SiLU()
        (2): Dropout(p=0, inplace=False)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (skip_connection): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
    )
    (1): Upsample(
      (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (1-2): 2 x TimestepEmbedSequential(
    (0): ResBlock(
      (in_layers): Sequential(
        (0): GroupNorm32(32, 64, eps=1e-05, affine=True)
        (1): SiLU()
        (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (h_upd): Identity()
      (x_upd): Identity()
      (emb_layers): Sequential(
        (0): SiLU()
        (1): Linear(in_features=128, out_features=32, bias=True)
      )
      (out_layers): Sequential(
        (0): GroupNorm32(32, 32, eps=1e-05, affine=True)
        (1): SiLU()
        (2): Dropout(p=0, inplace=False)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (skip_connection): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
    )
    (1): SpatialTransformer(
      (norm): GroupNorm(32, 32, eps=1e-06, affine=True)
      (proj_in): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
      (transformer_blocks): ModuleList(
        (0): BasicTransformerBlock(
          (attn1): MemoryEfficientCrossAttention(
            (to_q): Linear(in_features=32, out_features=32, bias=False)
            (to_k): Linear(in_features=32, out_features=32, bias=False)
            (to_v): Linear(in_features=32, out_features=32, bias=False)
            (to_out): Sequential(
              (0): Linear(in_features=32, out_features=32, bias=True)
              (1): Dropout(p=0.0, inplace=False)
            )
          )
          (ff): FeedForward(
            (net): Sequential(
              (0): GEGLU(
                (proj): Linear(in_features=32, out_features=256, bias=True)
              )
              (1): Dropout(p=0.0, inplace=False)
              (2): Linear(in_features=128, out_features=32, bias=True)
            )
          )
          (attn2): MemoryEfficientCrossAttention(
            (to_q): Linear(in_features=32, out_features=32, bias=False)
            (to_k): Linear(in_features=16, out_features=32, bias=False)
            (to_v): Linear(in_features=16, out_features=32, bias=False)
            (to_out): Sequential(
              (0): Linear(in_features=32, out_features=32, bias=True)
              (1): Dropout(p=0.0, inplace=False)
            )
          )
          (norm1): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
          (norm3): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
        )
      )
      (proj_out): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
    )
    (2): Upsample(
      (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (3): TimestepEmbedSequential(
    (0): ResBlock(
      (in_layers): Sequential(
        (0): GroupNorm32(32, 64, eps=1e-05, affine=True)
        (1): SiLU()
        (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (h_upd): Identity()
      (x_upd): Identity()
      (emb_layers): Sequential(
        (0): SiLU()
        (1): Linear(in_features=128, out_features=32, bias=True)
      )
      (out_layers): Sequential(
        (0): GroupNorm32(32, 32, eps=1e-05, affine=True)
        (1): SiLU()
        (2): Dropout(p=0, inplace=False)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (skip_connection): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
    )
    (1): SpatialTransformer(
      (norm): GroupNorm(32, 32, eps=1e-06, affine=True)
      (proj_in): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
      (transformer_blocks): ModuleList(
        (0): BasicTransformerBlock(
          (attn1): MemoryEfficientCrossAttention(
            (to_q): Linear(in_features=32, out_features=32, bias=False)
            (to_k): Linear(in_features=32, out_features=32, bias=False)
            (to_v): Linear(in_features=32, out_features=32, bias=False)
            (to_out): Sequential(
              (0): Linear(in_features=32, out_features=32, bias=True)
              (1): Dropout(p=0.0, inplace=False)
            )
          )
          (ff): FeedForward(
            (net): Sequential(
              (0): GEGLU(
                (proj): Linear(in_features=32, out_features=256, bias=True)
              )
              (1): Dropout(p=0.0, inplace=False)
              (2): Linear(in_features=128, out_features=32, bias=True)
            )
          )
          (attn2): MemoryEfficientCrossAttention(
            (to_q): Linear(in_features=32, out_features=32, bias=False)
            (to_k): Linear(in_features=16, out_features=32, bias=False)
            (to_v): Linear(in_features=16, out_features=32, bias=False)
            (to_out): Sequential(
              (0): Linear(in_features=32, out_features=32, bias=True)
              (1): Dropout(p=0.0, inplace=False)
            )
          )
          (norm1): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
          (norm3): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
        )
      )
      (proj_out): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
Sequential(
  (0): GroupNorm32(32, 32, eps=1e-05, affine=True)
  (1): SiLU()
  (2): Conv2d(32, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
)
